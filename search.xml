<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue.js使用Ajax</title>
      <link href="/2019/03/30/vue-axios/"/>
      <url>/2019/03/30/vue-axios/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>在原生的Vue.js中，默认是不支持的Ajax的。但是，在某些情况下又不得不用。为了让Vue能够支持异步请求API，可以使用axios库来实现。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>切换到Vue项目目录下，使用npm来安装插件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save --save-exact axios vue-axios</span><br></pre></td></tr></table></figure><p>打开main.js，注册组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import axios from &apos;axios&apos;</span><br><span class="line">import VueAxios from &apos;vue-axios&apos;</span><br><span class="line"></span><br><span class="line">Vue.use(VueAxios, axios)</span><br></pre></td></tr></table></figure><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>通过使用GitHub的API接口，来实现一个简单的用户搜索功能。当用户输入用户名后进行提交，在页面不刷新的前提下，异步请求API更新页面内容。</p><blockquote><p>推荐使用vscode来开发，安装<strong>Veutr</strong>插件，提高开发效率。</p></blockquote><p>新建一个component</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;github&quot;&gt;</span><br><span class="line">    &lt;form @submit.prevent=&quot;find()&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot; v-model=&quot;username&quot;&gt;</span><br><span class="line">      &lt;button type=&quot;submit&quot;&gt;搜索&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;div class=&quot;user-info&quot; v-if=&quot;content&quot;&gt;</span><br><span class="line">      &lt;img :src=&quot;content.avatar_url&quot; alt=&quot;avatar&quot; class=&quot;avatar&quot;&gt;</span><br><span class="line">      &lt;p&gt;&#123;&#123; content.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">      &lt;p&gt;&#123;&#123; content.location &#125;&#125;&lt;/p&gt;</span><br><span class="line">      &lt;p&gt;&#123;&#123; content.bio&#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;github&quot;,</span><br><span class="line">  data: function() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      username: &quot;&quot;,</span><br><span class="line">      content: &quot;&quot;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    find() &#123;</span><br><span class="line">      this.axios</span><br><span class="line">        .get(&quot;https://api.github.com/users/&quot; + this.username)</span><br><span class="line">        .then(response =&gt; &#123;</span><br><span class="line">          this.content = response.data;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">img.avatar &#123;</span><br><span class="line">  width: 5em;</span><br><span class="line">  height: 5em;</span><br><span class="line">  border-radius: 50%;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> vue.js </tag>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue CLI部署</title>
      <link href="/2019/03/30/vue-cli/"/>
      <url>/2019/03/30/vue-cli/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>之前学习Vue.js的时候，一直都是直接在HTML里引入script。在正儿八经的项目开发中，就需要用Vue CLI来生成环境。Vue CLI就像一个脚手架，生成好一个环境，最后通过webpack把你写的template进行封装打包。</p><p>Web开发经历了20多年的发展，不再是写写HTML，CSS，或者切切图的事。组件化开发成为了现在的主流，便于前端工程师们后期进行修改和维护。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>需要先安装好Node.js环境，此处省略。</p><p>切换到项目目录，全局安装Vue CLI</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g vue-cli</span><br></pre></td></tr></table></figure><p>创建应用。不需要对Webpack有太多的了解，这一切Vue CLI都会帮我们完成。<strong>app</strong>是自定义的项目名称。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack app</span><br></pre></td></tr></table></figure><ul><li>首先会询问项目名，描述，作者三项，直接回车即可</li><li>接着有一个 vue build 选项，直接回车即可</li><li>然后会问要不要安装 vue-router，开发单页应用基本离不开路由，推荐选择安装</li><li>最后是语法检查，单元测试，项目测试三项直接输入 n </li></ul><p>部署完成后，根据提示把命令敲一遍，然后即可通过localhost:8080访问你的应用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd app</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> vue.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 选择器</title>
      <link href="/2019/01/16/css-selector/"/>
      <url>/2019/01/16/css-selector/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><table><thead><tr><th>选择器</th><th>例子</th><th>例子描述</th><th>CSS</th></tr></thead><tbody><tr><td><a href="http://www.w3school.com.cn/cssref/selector_class.asp" target="_blank" rel="noopener">.<em>class</em></a></td><td>.intro</td><td>选择 class=”intro” 的所有元素。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_id.asp" target="_blank" rel="noopener">#<em>id</em></a></td><td>#firstname</td><td>选择 id=”firstname” 的所有元素。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_all.asp" target="_blank" rel="noopener">*</a></td><td>*</td><td>选择所有元素。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_element.asp" target="_blank" rel="noopener"><em>element</em></a></td><td>p</td><td>选择所有 <p> 元素。</p></td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_element_comma.asp" target="_blank" rel="noopener"><em>element</em>,<em>element</em></a></td><td>div,p</td><td>选择所有 <div> 元素和所有 <p> 元素。</p></div></td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_element_element.asp" target="_blank" rel="noopener"><em>element</em> <em>element</em></a></td><td>div p</td><td>选择 <div> 元素内部的所有 <p> 元素。</p></div></td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_element_gt.asp" target="_blank" rel="noopener"><em>element</em>&gt;<em>element</em></a></td><td>div&gt;p</td><td>选择父元素为 <div> 元素的所有 <p> 元素。</p></div></td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_element_plus.asp" target="_blank" rel="noopener"><em>element</em>+<em>element</em></a></td><td>div+p</td><td>选择紧接在 <div> 元素之后的所有 <p> 元素。</p></div></td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_attribute.asp" target="_blank" rel="noopener">[<em>attribute</em>]</a></td><td>[target]</td><td>选择带有 target 属性所有元素。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_attribute_value.asp" target="_blank" rel="noopener">[<em>attribute</em>=<em>value</em>]</a></td><td>[target=_blank]</td><td>选择 target=”_blank” 的所有元素。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_attribute_value_contain.asp" target="_blank" rel="noopener">[<em>attribute</em>~=<em>value</em>]</a></td><td>[title~=flower]</td><td>选择 title 属性包含单词 “flower” 的所有元素。</td><td>2</td></tr><tr><td>[[<em>attribute</em>\</td><td>=<em>value</em>]](<a href="http://www.w3school.com.cn/cssref/selector_attribute_value_start.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/cssref/selector_attribute_value_start.asp</a>)</td><td>[lang\</td><td>=en]</td><td>选择 lang 属性值以 “en” 开头的所有元素。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_link.asp" target="_blank" rel="noopener">:link</a></td><td>a:link</td><td>选择所有未被访问的链接。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_visited.asp" target="_blank" rel="noopener">:visited</a></td><td>a:visited</td><td>选择所有已被访问的链接。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_active.asp" target="_blank" rel="noopener">:active</a></td><td>a:active</td><td>选择活动链接。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_hover.asp" target="_blank" rel="noopener">:hover</a></td><td>a:hover</td><td>选择鼠标指针位于其上的链接。</td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_focus.asp" target="_blank" rel="noopener">:focus</a></td><td>input:focus</td><td>选择获得焦点的 input 元素。</td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_first-letter.asp" target="_blank" rel="noopener">:first-letter</a></td><td>p:first-letter</td><td>选择每个 <p> 元素的首字母。</p></td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_first-line.asp" target="_blank" rel="noopener">:first-line</a></td><td>p:first-line</td><td>选择每个 <p> 元素的首行。</p></td><td>1</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_first-child.asp" target="_blank" rel="noopener">:first-child</a></td><td>p:first-child</td><td>选择属于父元素的第一个子元素的每个 <p> 元素。</p></td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_before.asp" target="_blank" rel="noopener">:before</a></td><td>p:before</td><td>在每个 <p> 元素的内容之前插入内容。</p></td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_after.asp" target="_blank" rel="noopener">:after</a></td><td>p:after</td><td>在每个 <p> 元素的内容之后插入内容。</p></td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_lang.asp" target="_blank" rel="noopener">:lang(<em>language</em>)</a></td><td>p:lang(it)</td><td>选择带有以 “it” 开头的 lang 属性值的每个 <p> 元素。</p></td><td>2</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_gen_sibling.asp" target="_blank" rel="noopener"><em>element1</em>~<em>element2</em></a></td><td>p~ul</td><td>选择前面有 <p> 元素的每个 <ul> 元素。</ul></p></td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_attr_begin.asp" target="_blank" rel="noopener">[<em>attribute</em>^=<em>value</em>]</a></td><td>a[src^=”https”]</td><td>选择其 src 属性值以 “https” 开头的每个 <a> 元素。</a></td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_attr_end.asp" target="_blank" rel="noopener">[<em>attribute</em>$=<em>value</em>]</a></td><td>a[src$=”.pdf”]</td><td>选择其 src 属性以 “.pdf” 结尾的所有 <a> 元素。</a></td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_attr_contain.asp" target="_blank" rel="noopener">[<em>attribute**=</em>value*]</a></td><td>a[src*=”abc”]</td><td>选择其 src 属性中包含 “abc” 子串的每个 <a> 元素。</a></td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_first-of-type.asp" target="_blank" rel="noopener">:first-of-type</a></td><td>p:first-of-type</td><td>选择属于其父元素的首个 <p> 元素的每个 </p><p> 元素。</p></td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_last-of-type.asp" target="_blank" rel="noopener">:last-of-type</a></td><td>p:last-of-type</td><td>选择属于其父元素的最后 <p> 元素的每个 </p><p> 元素。</p></td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_only-of-type.asp" target="_blank" rel="noopener">:only-of-type</a></td><td>p:only-of-type</td><td>选择属于其父元素唯一的 <p> 元素的每个 </p><p> 元素。</p></td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_only-child.asp" target="_blank" rel="noopener">:only-child</a></td><td>p:only-child</td><td>选择属于其父元素的唯一子元素的每个 <p> 元素。</p></td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_nth-child.asp" target="_blank" rel="noopener">:nth-child(<em>n</em>)</a></td><td>p:nth-child(2)</td><td>选择属于其父元素的第二个子元素的每个 <p> 元素。</p></td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_nth-last-child.asp" target="_blank" rel="noopener">:nth-last-child(<em>n</em>)</a></td><td>p:nth-last-child(2)</td><td>同上，从最后一个子元素开始计数。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_nth-of-type.asp" target="_blank" rel="noopener">:nth-of-type(<em>n</em>)</a></td><td>p:nth-of-type(2)</td><td>选择属于其父元素第二个 <p> 元素的每个 </p><p> 元素。</p></td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_nth-last-of-type.asp" target="_blank" rel="noopener">:nth-last-of-type(<em>n</em>)</a></td><td>p:nth-last-of-type(2)</td><td>同上，但是从最后一个子元素开始计数。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_last-child.asp" target="_blank" rel="noopener">:last-child</a></td><td>p:last-child</td><td>选择属于其父元素最后一个子元素每个 <p> 元素。</p></td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_root.asp" target="_blank" rel="noopener">:root</a></td><td>:root</td><td>选择文档的根元素。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_empty.asp" target="_blank" rel="noopener">:empty</a></td><td>p:empty</td><td>选择没有子元素的每个 <p> 元素（包括文本节点）。</p></td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_target.asp" target="_blank" rel="noopener">:target</a></td><td>#news:target</td><td>选择当前活动的 #news 元素。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_enabled.asp" target="_blank" rel="noopener">:enabled</a></td><td>input:enabled</td><td>选择每个启用的 <input> 元素。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_disabled.asp" target="_blank" rel="noopener">:disabled</a></td><td>input:disabled</td><td>选择每个禁用的 <input> 元素</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_checked.asp" target="_blank" rel="noopener">:checked</a></td><td>input:checked</td><td>选择每个被选中的 <input> 元素。</td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_not.asp" target="_blank" rel="noopener">:not(<em>selector</em>)</a></td><td>:not(p)</td><td>选择非 <p> 元素的每个元素。</p></td><td>3</td></tr><tr><td><a href="http://www.w3school.com.cn/cssref/selector_selection.asp" target="_blank" rel="noopener">::selection</a></td><td>::selection</td><td>选择被用户选取的元素部分。</td><td>3</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在CentOS 7上添加Swap交换空间</title>
      <link href="/2018/10/27/centos-swap/"/>
      <url>/2018/10/27/centos-swap/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>原文出处：<a href="https://blog.csdn.net/zstack_org/article/details/53258588" target="_blank" rel="noopener">https://blog.csdn.net/zstack_org/article/details/53258588</a></p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>如何让服务器响应更快？如何避免应用出现内存不足的错误？最简单的方法就是增加交换空间。Swap是存储盘上的一块自留地，操作系统可以在这里暂存一些内存里放不下的东西。</p><p>这从某种程度上相当于增加了服务器的可用内存。虽然从swap读写比内存慢，但总比没有好，算是内存不够时的安全网。</p><p>如果没有swap，则服务器一旦内存不足，就会开始终止应用以释放内存，甚至会崩溃，这会让你丢失一些还没来得及保存的数据，或者造成当机。有些应用明确要求系统配置swap以确保数据访问的可靠性。</p><p>本文介绍如何在CentOS 7服务器上创建并启用swap文件。</p><p>注：swap通常在传统机械硬盘上表现更好，在SSD上使用swap可能会造成问题，尤其是硬件老化之后。所以，对于DigitalOcean以及其他使用基于SSD的云主机服务的用户，我们不推荐启用swap。这甚至会影响到跟你的虚拟机共用宿主机的其他用户。</p><p>对于DigitalOcean用户，提升性能的最佳方法就是更新Droplet。通常来说，升级后的主机表现都会有所提升，并且更不容易受到硬件问题的影响。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>首先，你需要一台CentOS 7服务器，配置过具备<code>sudo</code>权限的非root用户（配置过程可参考<a href="https://www.digitalocean.com/community/tutorials/initial-server-setup-with-centos-7" target="_blank" rel="noopener">这个教程</a>的第一到第四步骤）。</p><p>准备就绪后，以该用户名SSH到你的CentOS服务器上，准备安装swap文件。</p><h2 id="检查系统的Swap信息"><a href="#检查系统的Swap信息" class="headerlink" title="检查系统的Swap信息"></a>检查系统的Swap信息</h2><p>首先我们需要检查系统的存储，看看是否已经配置过swap。一个系统可以设置多个swap文件或分区，不过一般来说一个就够了。</p><p>使用<code>swapon</code>命令可以检查系统是否已经配置过swap，这是一个通用的swap工具。使用<code>-s</code>标签可列出当前存储设备上的swap使用情况：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon -s</span><br></pre></td></tr></table></figure><p>如果该命令没有返回出结果，则代表该系统尚未配置过swap。</p><p>或者，我们也可以使用<code>free</code>工具来查看系统的整体内存使用情况，这里可以看到内存和swap的使用状态（显示单位为MB）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">free -m</span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          3953        315       3637          8         11        107</span><br><span class="line">-/+ buffers/cache:        196       3756</span><br><span class="line">Swap:            0          0       4095</span><br></pre></td></tr></table></figure><p>这里可以看到我们这个系统的total swap空间为0，即没有配置过swap。这与我们在<code>swapon</code>里看到的结果相符合。 </p><h2 id="检查可用的存储空间"><a href="#检查可用的存储空间" class="headerlink" title="检查可用的存储空间"></a>检查可用的存储空间</h2><p>通常，我们建立一个单独的分区作为swap。然而有时候由于硬件或软件的限制，新建分区的方式无法实现，这种情况下就可以建立一个swap文件来实现同样的功能。</p><p>开始之前，先检查一下磁盘的可用空间。输入如下指令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/vda1        59G  1.5G   55G   3% /</span><br><span class="line">devtmpfs        2.0G     0  2.0G   0% /dev</span><br><span class="line">tmpfs           2.0G     0  2.0G   0% /dev/shm</span><br><span class="line">tmpfs           2.0G  8.3M  2.0G   1% /run</span><br><span class="line">tmpfs           2.0G     0  2.0G   0% /sys/fs/cgroup</span><br></pre></td></tr></table></figure><p>这里的<code>-h</code>标记是为了告诉<code>dh</code>将信息输出为对人类友好的格式，比如以MB或GB为单位输出空间使用和空余情况，而不是直接输出内存块的个数。</p><p>从第一行可以看到我们的存储分区上还有59GB的空间剩余，这足够我们操作了。（我这是一台中等规模的新建云主机，每个人的情况可能有很大不同。）</p><p>合适的swap空间是多大？关于这个问题有很多种选择，这取决于你的应用需求和你个人的偏好。一般来说，内存容量的两倍就是个不错的起点。</p><p>我的系统内存有4GB，如果设置8GB的swap会占据太多空间，所以我决定只设置4GB就好。</p><h2 id="创建Swap文件"><a href="#创建Swap文件" class="headerlink" title="创建Swap文件"></a>创建Swap文件</h2><p>接下来我们将在文件系统上创建swap文件。我们要在根目录（<code>/</code>）下创建一个名叫<code>swapfile</code>的文件，当然你也可以选择你喜欢的文件名。该文件分配的空间将等于我们需要的swap空间。</p><p>最快捷的创建方式是<code>fallocate</code>命令，该命令能够创建一个预分配指定大小空间的文件。输入如下指令创建一个4GB的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fallocate -l 4G /swapfile</span><br></pre></td></tr></table></figure><p>输入密码后，该swap文件将立即创建完毕。我们可以用<code>ls</code>命令检查文件大小： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls -lh /swapfile</span><br><span class="line"></span><br><span class="line">-rw-r--r-- 1 root root 4.0G Oct 30 11:00 /swapfile</span><br></pre></td></tr></table></figure><p>至此，我们的swap文件就创建完毕了。 </p><h2 id="启用Swap文件"><a href="#启用Swap文件" class="headerlink" title="启用Swap文件"></a>启用Swap文件</h2><p>现在我们已经有了swap文件，但系统还不知道应该使用该文件作为swap，这就需要我们告知系统将该文件格式化为swap并启用起来。</p><p>首先我们需要更改swap文件的权限，确保只有root才可读，否则会有很大的安全隐患。使用<code>chmod</code>命令进行权限操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 600 /swapfile</span><br></pre></td></tr></table></figure><p>如此，该文件的读写都只有root才能操作。使用<code>ls -lh</code>命令检查一下： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls -lh /swapfile</span><br><span class="line"></span><br><span class="line">-rw------- 1 root root 4.0G Oct 30 11:00 /swapfile</span><br></pre></td></tr></table></figure><p>然后，使用如下命令告知系统将该文件用于swap： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo mkswap /swapfile</span><br><span class="line"></span><br><span class="line">Setting up swapspace version 1, size = 4194300 KiB</span><br><span class="line">no label, UUID=b99230bb-21af-47bc-8c37-de41129c39bf</span><br></pre></td></tr></table></figure><p>现在，这个swap文件就可以作为swap空间使用了。输入如下命令开始使用该swap： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo swapon /swapfile</span><br></pre></td></tr></table></figure><p>我们可以输入如下命令来确认一下设置是否已经生效： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">swapon -s</span><br><span class="line"></span><br><span class="line">Filename                Type        Size    Used    Priority</span><br><span class="line">/swapfile               file        4194300 0     -1</span><br></pre></td></tr></table></figure><p>可以看到返回的结果中已经有我们刚才设置的swap。再使用<code>free</code>工具确认一下： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">free -m</span><br><span class="line"></span><br><span class="line">             total       used       free     shared    buffers     cached</span><br><span class="line">Mem:          3953        315       3637          8         11        107</span><br><span class="line">-/+ buffers/cache:        196       3756</span><br><span class="line">Swap:         4095          0       4095</span><br></pre></td></tr></table></figure><p>至此，我们的swap已经设置完毕，操作系统会在需要的时候使用它。</p><h2 id="使Swap文件永久生效"><a href="#使Swap文件永久生效" class="headerlink" title="使Swap文件永久生效"></a>使Swap文件永久生效</h2><p>至此我们已经在系统中启用了swap文件，然而一旦系统重启后，服务器还不能自动启用该文件。要让系统在重启后自动生效swap，我们可以通过修改<code>fstab</code>文件来实现（这是一个管理文件系统和分区的表）。</p><p>用<code>sudo</code>权限打开该文件编辑：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/fstab</span><br></pre></td></tr></table></figure><p>在文件末尾加入下面这行内容，告诉操作系统自动使用刚才创建的swap文件： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/swapfile   swap    swap    sw  0   0</span><br></pre></td></tr></table></figure><p>添加完毕后，保存退出。以后服务器每次重启都会检查该文件并自动启用swap。 </p><h2 id="更改Swap配置（可选）"><a href="#更改Swap配置（可选）" class="headerlink" title="更改Swap配置（可选）"></a>更改Swap配置（可选）</h2><p>有几个涉及swap的选项可能会影响到系统的性能表现。大部分情况下这些选项是可选的，具体要修改成什么样则取决于你的应用需求以及个人偏好。</p><h3 id="Swappiness"><a href="#Swappiness" class="headerlink" title="Swappiness"></a>Swappiness</h3><p><code>swappiness</code>参数决定了系统将数据从内存交换到swap空间的频率，数值设置在0到100之间，代表系统将数据从内存交换到swap空间的力度。</p><p>该数值越接近于0，系统越倾向于不进行swap，仅在必要的时候进行swap操作。由于swap要比内存慢很多，因此减少对swap的依赖意味着更高的系统性能。</p><p>该数值越接近于100，系统越倾向于多进行swap。有些应用的内存使用习惯更适合于这种情况，这也于服务器的用途有关。</p><p>输入如下命令查看当前的swappiness数值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/sys/vm/swappiness</span><br><span class="line"></span><br><span class="line">30</span><br></pre></td></tr></table></figure><p>CentOS 7默认设置了30的swappiness，这对于大部分桌面系统和本地服务器是比较中庸的数值。对于VPS系统而言，可能接近于0的值是更加合适的。</p><p>使用<code>sysctl</code>命令可以修改swappiness。比如将swappiness设为10：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl vm.swappiness=10</span><br><span class="line"></span><br><span class="line">vm.swappiness = 10</span><br></pre></td></tr></table></figure><p>本次修改将一直生效到下次重启前。如果希望永久修改该数值，则需要编辑<code>sysctl</code>配置文件： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>将以下内容粘贴到文件末尾： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm.swappiness = 10</span><br></pre></td></tr></table></figure><p>编辑完成后，保存退出，之后服务器每次重启的时候会将swappiness设置为该值。 </p><h3 id="缓存压力（Cache-Pressure-）"><a href="#缓存压力（Cache-Pressure-）" class="headerlink" title="缓存压力（Cache Pressure ）"></a>缓存压力（Cache Pressure ）</h3><p>另一个可以考虑更改的配置项是<code>vfs_cache_pressure</code>，该配置项涉及特殊文件系统元文件条目的存储。对此类信息的频繁读取是非常消耗性能的，所以延长其在缓存的保存时间可以提升系统的性能。</p><p>通过<code>proc</code>文件系统查看缓存压力的当前设定值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/sys/vm/vfs_cache_pressure</span><br><span class="line"></span><br><span class="line">100</span><br></pre></td></tr></table></figure><p>这个数值是比较高的，意味着系统从缓存中移除inode信息的速度比较快。一个保守一些的数值是50，使用<code>sysctl</code>命令进行设置： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl vm.vfs_cache_pressure=50</span><br><span class="line"></span><br><span class="line">vm.vfs_cache_pressure = 50</span><br></pre></td></tr></table></figure><p>这条命令仅在重启前有效。要让该设置永久有效，需要编辑<code>sysctl</code>配置文件： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p>在文件末尾添加如下内容： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm.vfs_cache_pressure = 50</span><br></pre></td></tr></table></figure><p>保存退出，服务器就会在每次重启后都自动将缓存压力设置为50了。 </p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>至此，我们的系统内存就获得了一些喘气的空间。有了swap空间可以有效避免一些常见的问题。</p><p>如果你仍然会遇到内存不足（OOM，out of memory）的错误信息，或者你的系统不能运行你需要的应用，那么最好的方法是优化你的应用配置或者升级你的服务器，不过配置swap空间也不失为一个灵活的节省方案。</p><p>本文来源自<a href="https://www.digitalocean.com/community" target="_blank" rel="noopener">DigitalOcean Community</a>。英文原文：<a href="https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-centos-7" target="_blank" rel="noopener">How To Add Swap on CentOS 7</a> by <a href="https://www.digitalocean.com/community/users/jbarnett" target="_blank" rel="noopener">Josh Barnett</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> swap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NodeBB数据库备份与恢复</title>
      <link href="/2018/10/14/nodebb-database-backup-restore/"/>
      <url>/2018/10/14/nodebb-database-backup-restore/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>NodeBB在MongoDB下的备份和恢复操作。</p><h3 id="数据库备份"><a href="#数据库备份" class="headerlink" title="数据库备份"></a>数据库备份</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mongodump -u nodebb -p yourpassword --authenticationDatabase=nodebb -d nodebb</span><br></pre></td></tr></table></figure><p><strong>命令解释：</strong></p><ul><li>-u：用户名，如果按照官方教程来做，则用户名为<code>nodebb</code></li><li>-p：密码</li><li>–authenticationDatabase：等待进行验证的数据库，一般写你的数据库名</li><li>-d：你的数据库名，如果按照官方教程来做，则数据库名为<code>nodebb</code></li></ul><p>以上命令会在当前目录下生成<code>dump</code>目录，在里面有一个叫<code>nodebb</code>的目录，其内即为数据文件。</p><h3 id="数据库恢复"><a href="#数据库恢复" class="headerlink" title="数据库恢复"></a>数据库恢复</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mongorestore -u nodebb -p yourpassword --authenticationDatabase=nodebb -d nodebb --drop dump/nodebb</span><br></pre></td></tr></table></figure><p><strong>命令解释：</strong></p><ul><li>-u：用户名，如果按照官方教程来做，则用户名为<code>nodebb</code></li><li>-p：密码</li><li>–authenticationDatabase：等待进行验证的数据库，一般写你的数据库名</li><li>-d：你的数据库名，如果按照官方教程来做，则数据库名为<code>nodebb</code></li><li>–drop dump/nodebb：如果不加<code>--drop</code>这个参数，那么数据库内原有的数据不会被清除，导入时会遇到<strong>数据重复！</strong>会出现大量警告提示。加了这个参数就是先清掉数据库原有的内容，再将备份导入。后面的<code>dump/nodebb</code>是你当时导出数据的目录，这里用的相对路径</li></ul><h3 id="自动备份"><a href="#自动备份" class="headerlink" title="自动备份"></a>自动备份</h3><p>手动备份很麻烦，很不智能，还容易出错，作为一个Geek是不允许这种事情发生的。于是有了下面的自动备份脚本，该脚本将在每天凌晨3点30分自动对数据库进行备份，然后对备份后的数据文件进行压缩打包，之后删除三天前的历史备份档案，只保留最近三天的备份。你最终看到的就是备份目录内只有最近三天的备份文件压缩包。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">backup_date=$(date +"%F")#获取日期</span><br><span class="line">cd /root/#切换到当前用户家目录，你可以换成你的用户目录</span><br><span class="line">/usr/bin/mongodump -u nodebb -p yourpassword --authenticationDatabase=nodebb -d nodebb#导出数据库备份</span><br><span class="line">tar -zcvf dump/$&#123;backup_date&#125;.tar.gz dump/nodebb --remove-files#将导出的备份压缩打包，并以日期命名压缩包</span><br><span class="line">find dump/ -mtime +3 | xargs rm -f#检索三天前的备份压缩包，将之删除</span><br><span class="line">echo $(date +"%F %H:%M:%S") Backup successfully ! &gt;&gt; log.backup#写入日志</span><br></pre></td></tr></table></figure><ul><li>将上述脚本保存到<code>/root/script/</code>目录下，并命名为<code>backup.sh</code></li><li>使用命令<code>chmod u+x /root/script/backup.sh</code>为脚本添加可执行权限</li><li>运行命令<code>crontab -e</code>打开<code>crontab</code>的任务添加界面，加入下面这一行：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">30 3 * * * /root/script/backup.sh</span><br></pre></td></tr></table></figure><p>使用<code>crontab -l</code>就可以看到刚才添加的定时任务了。 </p>]]></content>
      
      
      
        <tags>
            
            <tag> nodebb </tag>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>产科医鸿鸟音乐</title>
      <link href="/2018/10/06/kounodori-music/"/>
      <url>/2018/10/06/kounodori-music/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="第一季"><a href="#第一季" class="headerlink" title="第一季"></a>第一季</h2>    <div id="aplayer-lXtUVDKu" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="001fMadP3xUDoG" data-server="tencent" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>    <div id="aplayer-KxBxqbKS" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="002zZZu848JulC" data-server="tencent" data-type="album" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div><h2 id="第二季"><a href="#第二季" class="headerlink" title="第二季"></a>第二季</h2>    <div id="aplayer-qvRARsXY" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="001tp7l31V9YH9" data-server="tencent" data-type="album" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>    <div id="aplayer-NCmfczDg" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="002NT5wM1oKfpd" data-server="tencent" data-type="album" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"></div>]]></content>
      
      
      <categories>
          
          <category> 音乐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 产科医鸿鸟 </tag>
            
            <tag> 音乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript使用函数实现Hangman</title>
      <link href="/2018/09/22/javascript-function-hangman/"/>
      <url>/2018/09/22/javascript-function-hangman/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>JavaScript使用函数实现Hangman<br><a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">    var pickWord = function () &#123;</span><br><span class="line">      var words = [</span><br><span class="line">        &quot;javascript&quot;,</span><br><span class="line">        &quot;monkey&quot;,</span><br><span class="line">        &quot;amazing&quot;,</span><br><span class="line">        &quot;pancake&quot;</span><br><span class="line">      ];</span><br><span class="line"></span><br><span class="line">      return words[Math.floor(Math.random() * words.length)];</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    var setupAnswerArray = function (word) &#123;</span><br><span class="line">      var answerArray = [];</span><br><span class="line">      for (var i = 0; i &lt; word.length; i++) &#123;</span><br><span class="line">        answerArray[i] = &quot;_&quot;;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      return answerArray;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    var showPlayerProgress = function (answerArray) &#123;</span><br><span class="line">      alert(answerArray.join(&quot; &quot;));</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    var getGuess = function () &#123;</span><br><span class="line">      return prompt(&quot;Guess a letter, or click Cancel to stop playing.&quot;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    var updateGameState = function (guess, word, answerArray) &#123;</span><br><span class="line">      var appearances = 0;</span><br><span class="line">      for (var j = 0; j &lt; word.length; j++) &#123;</span><br><span class="line">        if (word[j] === guess) &#123;</span><br><span class="line">          answerArray[j] = guess;</span><br><span class="line">          appearances++;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      return appearances;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    var showAnswerAndCongratulatePlayer = function (answerArray) &#123;</span><br><span class="line">      showPlayerProgress(answerArray);</span><br><span class="line">      alert(&quot;Good job! The answer was &quot; + answerArray.join(&quot;&quot;));</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    var word = pickWord();</span><br><span class="line">    var answerArray = setupAnswerArray(word);</span><br><span class="line">    var remainingLetters = word.length;</span><br><span class="line"></span><br><span class="line">    while (remainingLetters &gt; 0) &#123; showPlayerProgress(answerArray); var guess = getGuess();</span><br><span class="line">      if (guess === null) &#123;</span><br><span class="line">        break;</span><br><span class="line">      &#125; else if (guess.length !== 1) &#123;</span><br><span class="line">        alert(&quot;Please enter a single letter.&quot;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        var correctGuesses = updateGameState(guess, word, answerArray);</span><br><span class="line">        remainingLetters -= correctGuesses;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">showAnswerAndCongratulatePlayer(answerArray);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/09/15/hello-world/"/>
      <url>/2018/09/15/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
